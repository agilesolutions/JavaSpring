server:
  port: 8080

spring:
  security:
    oauth2:
      client:
        registration:
          mock:
            client-id: xxx
            client-secret: yyy
            scope: profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: WireMockOAuth2
        provider:
          mock:
            issuer-uri: http://localhost:9988
  jpa:
    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.H2Dialect
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
  datasource:
    url: jdbc:h2:mem:mydb
    username: sa
    password: password
    driverClassName: org.h2.Driver

  data:
    mongodb:
      database: test
      port: 27017

  kafka:
    embedded:
      kraft: true
    bootstrap-servers: localhost:54773
    consumer:
      auto-offset-reset: earliest

springdoc:
  enable-spring-security: true
  show-login-endpoint: true
  show-oauth2-endpoints: true
  show-actuator: true
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha

logging:
  level:
    root: INFO
    com.agilesolutions.kafka: DEBUG
    org.springframework.jpa: DEBUG
    org.springframework.mongo: DEBUG
    org.springframework.security: DEBUG

auto:
  register:
    schema: false

service:
  retry:
    initial_delay: 1000
    max-delay: 5000
    multiplier: 2.0
    max-attempts: 3

management:
  tracing:
    enabled: true
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  metrics:
    mongo:
      command:
        enabled: false
    export:
      prometheus:
        enabled: true

twelvedata:
  api:
    url: https://api.twelvedata.com/
    key: demo